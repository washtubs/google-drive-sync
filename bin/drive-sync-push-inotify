#!/usr/bin/env bash


# PRIVATE
_lock()             { flock -$1 $3; }
_no_more_locking()  { _lock u $1 $2; _lock xn $1 $2 && rm -f $1; }
_prepare_locking()  { eval "exec $2>\"$1\""; trap "_no_more_locking $1 $2" EXIT; }

# PUBLIC
exlock_now()        { _lock xn $1 $2; }  # obtain an exclusive lock immediately or fail
exlock()            { _lock x $1 $2; }   # obtain an exclusive lock
shlock()            { _lock s $1 $2; }   # obtain a shared lock
unlock()            { _lock u $1 $2; }   # drop a lock

directory=$1
if [ -z "$directory" ]; then
    echo Specify a directory
    exit 1
fi

if [ ! -d "$directory" ]; then
    echo Not a directory: $directory
    exit 1
fi

if [ ! -z $DRIVE_SYNC_LOCKFILE ]; then
    lockfile=$DRIVE_SYNC_LOCKFILE
else
    lockfile=/tmp/drive-sync-lock
fi

touch $lockfile

_prepare_locking $lockfile 82

tmpfile=$(mktemp /tmp/drive-sync-lock-XXXXX)
inotifywait -r -e close_write,moved_to,create -m $directory | tee $tmpfile |
while read -r directory events filename; do
    if [ "$(cat $tmpfile | wc -l)" -gt 0 ]; then
        echo -n "" > $tmpfile
        echo $directory $events $filename
        if exlock $lockfile 82; then
            drive push -no-prompt $directory
            unlock $lockfile 82
        fi
    fi
done
